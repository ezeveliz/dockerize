# Imagen base que voy base usar
FROM ubuntu:20.04

LABEL mantainer="Eze Veliz"

# Instalacion no interactiva
ENV DEBIAN_FRONTEND=noninteractive

# Cada RUN es un comando que va a correr
# Cada RUN(y cada cambio) se ejecuta en un contenedor diferente secuencialmente y luego se commitea, por eso lo mejor es tener la menor cantidad posible de bloques de cambios

RUN apt-get update \
    && apt-get install -y gnupg tzdata \
    && echo "UTC" > /etc/timezone \
    && dpkg-reconfigure -f noninteractive tzdata

# Instalo PHP, Composer, Nginx, supervisor(monitor de procesos que permite iniciar varios procesos y asegurarse de que se queden vivos) y sqlite 3 y luego limpio
# La ultima linea evita que Nginx corra como daemon mandandose al fondo, si no la agrego Nginx va a correr en el fondo(cosa que a Docker no le gusta) haciendo que el proceso muera inmediatamente
RUN apt-get update \
    && apt-get install -y curl zip unzip git supervisor sqlite3 \
       nginx php7.4-fpm php7.4-cli \
       php7.4-pgsql php7.4-sqlite3 php7.4-gd \
       php7.4-curl php7.4-memcached \
       php7.4-imap php7.4-mysql php7.4-mbstring \
       php7.4-xml php7.4-zip php7.4-bcmath php7.4-soap \
       php7.4-intl php7.4-readline php7.4-xdebug \
       php-msgpack php-igbinary \
    && php -r "readfile('http://getcomposer.org/installer');" | php -- --install-dir=/usr/bin/ --filename=composer \
    && apt-get -y autoremove \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && echo "daemon off;" >> /etc/nginx/nginx.conf

# Hago un symlink de stdout y stderr en nginx(donde nginx loggea errores y logs) para que supervisor los pueda ver ya que es ahi donde los est√° esperando
RUN ln -sf /dev/stdout /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log

# Agrego la configuracion de Nginx que esta en el mismo nivel que el dockerfile
ADD default /etc/nginx/sites-available/default

# Agrego la configuracion de supervisor al directorio de configuracion de supervisor para que ejecute php y nginx automaticamente
ADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Agrego la configuracion de php para evitar que el mismo se auto daemonice y que supervisord le pierda el rastro
ADD php-fpm.conf /etc/php/7.4/fpm/php-fpm.conf

# Agrego el script start-container al path del contenedor y lo hago ejecutable
ADD start-container.sh /usr/bin/start-container
RUN chmod +x /usr/bin/start-container

# Ejecuto un script cuando se inicializa el contenedor, lo que se pase como parametro(desde docker run...) se va a pasar a este script
ENTRYPOINT ["start-container"]